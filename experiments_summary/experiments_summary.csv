TIMESTAMP,CLASSIFIER,BEST_SCORE,BEST_PARAMS,N_SPLITS,SCORER,CV_RESULTS,GRID
15082020221626,RandomForestClassifier,0.0,"{'max_depth': 3, 'min_impurity_decrease': 0.2, 'n_estimators': 50, 'n_jobs': -1}",3.0,make_scorer(accuracy_score),"{'mean_fit_time': array([0.69218723, 1.22015095, 1.74586105, 0.62383604, 1.22980221,",
"       1.64957245, 0.70476309, 1.15710775, 1.74187477, 0.74647983,",,,,,,,
"       1.20556633, 1.66028182, 0.70793136, 1.14234455, 1.44764392,",,,,,,,
"       0.70038931, 1.01434636, 1.02687256]), 'std_fit_time': array([0.0697032 , 0.07709956, 0.0147609 , 0.03625696, 0.0603289 ,",,,,,,,
"       0.06197749, 0.03530089, 0.09472279, 0.07864912, 0.04838335,",,,,,,,
"       0.03748748, 0.06851728, 0.05929034, 0.03122273, 0.08246832,",,,,,,,
"       0.03706466, 0.03292921, 0.15531653]), 'mean_score_time': array([0.23182384, 0.25030017, 0.31222208, 0.1288933 , 0.23981794,",,,,,,,
"       0.29909992, 0.17913095, 0.23451233, 0.3002665 , 0.20819076,",,,,,,,
"       0.29758859, 0.27787828, 0.21294697, 0.2693073 , 0.18050345,",,,,,,,
"       0.12629414, 0.15006661, 0.10750802]), 'std_score_time': array([0.0610081 , 0.02509666, 0.03706402, 0.00610429, 0.01610979,",,,,,,,
"       0.06717391, 0.00969372, 0.0183483 , 0.04420926, 0.0394775 ,",,,,,,,
"       0.02533787, 0.0669189 , 0.02912383, 0.02082191, 0.04851321,",,,,,,,
"       0.00910961, 0.05029566, 0.00074024]), 'param_max_depth': masked_array(data=[3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 10, 10, 10, 10, 10,",,,,,,,
"                   10],",,,,,,,
"             mask=[False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False],",,,,,,,
"       fill_value='?',",,,,,,,
"            dtype=object), 'param_min_impurity_decrease': masked_array(data=[0.2, 0.2, 0.2, 0.4, 0.4, 0.4, 0.2, 0.2, 0.2, 0.4, 0.4,",,,,,,,
"                   0.4, 0.2, 0.2, 0.2, 0.4, 0.4, 0.4],",,,,,,,
"             mask=[False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False],",,,,,,,
"       fill_value='?',",,,,,,,
"            dtype=object), 'param_n_estimators': masked_array(data=[50, 100, 150, 50, 100, 150, 50, 100, 150, 50, 100, 150,",,,,,,,
"                   50, 100, 150, 50, 100, 150],",,,,,,,
"             mask=[False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False],",,,,,,,
"       fill_value='?',",,,,,,,
"            dtype=object), 'param_n_jobs': masked_array(data=[-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,",,,,,,,
"                   -1, -1, -1, -1],",,,,,,,
"             mask=[False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False],",,,,,,,
"       fill_value='?',",,,,,,,
"            dtype=object), 'params': [{'max_depth': 3, 'min_impurity_decrease': 0.2, 'n_estimators': 50, 'n_jobs': -1}, {'max_depth': 3, 'min_impurity_decrease': 0.2, 'n_estimators': 100, 'n_jobs': -1}, {'max_depth': 3, 'min_impurity_decrease': 0.2, 'n_estimators': 150, 'n_jobs': -1}, {'max_depth': 3, 'min_impurity_decrease': 0.4, 'n_estimators': 50, 'n_jobs': -1}, {'max_depth': 3, 'min_impurity_decrease': 0.4, 'n_estimators': 100, 'n_jobs': -1}, {'max_depth': 3, 'min_impurity_decrease': 0.4, 'n_estimators': 150, 'n_jobs': -1}, {'max_depth': 5, 'min_impurity_decrease': 0.2, 'n_estimators': 50, 'n_jobs': -1}, {'max_depth': 5, 'min_impurity_decrease': 0.2, 'n_estimators': 100, 'n_jobs': -1}, {'max_depth': 5, 'min_impurity_decrease': 0.2, 'n_estimators': 150, 'n_jobs': -1}, {'max_depth': 5, 'min_impurity_decrease': 0.4, 'n_estimators': 50, 'n_jobs': -1}, {'max_depth': 5, 'min_impurity_decrease': 0.4, 'n_estimators': 100, 'n_jobs': -1}, {'max_depth': 5, 'min_impurity_decrease': 0.4, 'n_estimators': 150, 'n_jobs': -1}, {'max_depth': 10, 'min_impurity_decrease': 0.2, 'n_estimators': 50, 'n_jobs': -1}, {'max_depth': 10, 'min_impurity_decrease': 0.2, 'n_estimators': 100, 'n_jobs': -1}, {'max_depth': 10, 'min_impurity_decrease': 0.2, 'n_estimators': 150, 'n_jobs': -1}, {'max_depth': 10, 'min_impurity_decrease': 0.4, 'n_estimators': 50, 'n_jobs': -1}, {'max_depth': 10, 'min_impurity_decrease': 0.4, 'n_estimators': 100, 'n_jobs': -1}, {'max_depth': 10, 'min_impurity_decrease': 0.4, 'n_estimators': 150, 'n_jobs': -1}], 'split0_test_score': array([0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875,",,,,,,,
"       0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875,",,,,,,,
"       0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875]), 'split1_test_score': array([0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875,",,,,,,,
"       0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875,",,,,,,,
"       0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875]), 'split2_test_score': array([0.852625, 0.852625, 0.852625, 0.852625, 0.852625, 0.852625,",,,,,,,
"       0.852625, 0.852625, 0.852625, 0.852625, 0.852625, 0.852625,",,,,,,,
"       0.852625, 0.852625, 0.852625, 0.852625, 0.852625, 0.852625]), 'mean_test_score': array([0.85266667, 0.85266667, 0.85266667, 0.85266667, 0.85266667,",,,,,,,
"       0.85266667, 0.85266667, 0.85266667, 0.85266667, 0.85266667,",,,,,,,
"       0.85266667, 0.85266667, 0.85266667, 0.85266667, 0.85266667,",,,,,,,
"       0.85266667, 0.85266667, 0.85266667]), 'std_test_score': array([2.94627825e-05, 2.94627825e-05, 2.94627825e-05, 2.94627825e-05,",,,,,,,
"       2.94627825e-05, 2.94627825e-05, 2.94627825e-05, 2.94627825e-05,",,,,,,,
"       2.94627825e-05, 2.94627825e-05, 2.94627825e-05, 2.94627825e-05,",,,,,,,
"       2.94627825e-05, 2.94627825e-05, 2.94627825e-05, 2.94627825e-05,",,,,,,,
"       2.94627825e-05, 2.94627825e-05]), 'rank_test_score': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32)}","{'min_impurity_decrease': [0.2, 0.4], 'n_estimators': [50, 100, 150], 'max_depth': [3, 5, 10], 'n_jobs': [-1]}",,,,,,
15082020221350,LogisticRegression,0.0,"{'C': 1, 'class_weight': 'None', 'solver': 'lbfgs'}",3.0,make_scorer(accuracy_score),"{'mean_fit_time': array([0.58377393, 0.02290106, 0.59860627, 0.1958224 , 0.55384064,",
"       0.02148374, 0.56413913, 0.17064754]), 'std_fit_time': array([0.01447111, 0.0014313 , 0.0312701 , 0.02482769, 0.01974909,",,,,,,,
"       0.00337775, 0.04845649, 0.00325316]), 'mean_score_time': array([0.00537888, 0.        , 0.00444865, 0.0063026 , 0.00334334,",,,,,,,
"       0.        , 0.00363485, 0.00727534]), 'std_score_time': array([2.56695098e-04, 0.00000000e+00, 1.00827289e-03, 2.99836239e-04,",,,,,,,
"       1.42945144e-05, 0.00000000e+00, 6.90630582e-05, 1.52765212e-03]), 'param_C': masked_array(data=[0.1, 0.1, 0.1, 0.1, 1, 1, 1, 1],",,,,,,,
"             mask=[False, False, False, False, False, False, False, False],",,,,,,,
"       fill_value='?',",,,,,,,
"            dtype=object), 'param_class_weight': masked_array(data=['None', 'None', 'balanced', 'balanced', 'None', 'None',",,,,,,,
"                   'balanced', 'balanced'],",,,,,,,
"             mask=[False, False, False, False, False, False, False, False],",,,,,,,
"       fill_value='?',",,,,,,,
"            dtype=object), 'param_solver': masked_array(data=['lbfgs', 'liblinear', 'lbfgs', 'liblinear', 'lbfgs',",,,,,,,
"                   'liblinear', 'lbfgs', 'liblinear'],",,,,,,,
"             mask=[False, False, False, False, False, False, False, False],",,,,,,,
"       fill_value='?',",,,,,,,
"            dtype=object), 'params': [{'C': 0.1, 'class_weight': 'None', 'solver': 'lbfgs'}, {'C': 0.1, 'class_weight': 'None', 'solver': 'liblinear'}, {'C': 0.1, 'class_weight': 'balanced', 'solver': 'lbfgs'}, {'C': 0.1, 'class_weight': 'balanced', 'solver': 'liblinear'}, {'C': 1, 'class_weight': 'None', 'solver': 'lbfgs'}, {'C': 1, 'class_weight': 'None', 'solver': 'liblinear'}, {'C': 1, 'class_weight': 'balanced', 'solver': 'lbfgs'}, {'C': 1, 'class_weight': 'balanced', 'solver': 'liblinear'}], 'split0_test_score': array([0.8526875,       nan, 0.59425  , 0.6008125, 0.85275  ,       nan,",,,,,,,
"       0.5925   , 0.602    ]), 'split1_test_score': array([0.8526875,       nan, 0.5989375, 0.603375 , 0.8526875,       nan,",,,,,,,
"       0.60075  , 0.6044375]), 'split2_test_score': array([0.8525625,       nan, 0.598125 , 0.604875 , 0.8525625,       nan,",,,,,,,
"       0.59675  , 0.6056875]), 'mean_test_score': array([0.85264583,        nan, 0.59710417, 0.60302083, 0.85266667,",,,,,,,
"              nan, 0.59666667, 0.60404167]), 'std_test_score': array([5.89255651e-05,            nan, 2.04527742e-03, 1.67730977e-03,",,,,,,,
"       7.79511956e-05,            nan, 3.36856382e-03, 1.53121457e-03]), 'rank_test_score': array([2, 7, 5, 4, 1, 8, 6, 3], dtype=int32)}","{'C': [0.1, 1], 'solver': ['lbfgs', 'liblinear'], 'class_weight': ['None', 'balanced']}",,,,,,
15082020212214,RandomForestClassifier,0.0,"{'max_depth': 3, 'min_impurity_decrease': 0.2, 'n_estimators': 50, 'n_jobs': -1}",3.0,make_scorer(accuracy_score),"{'mean_fit_time': array([0.42335137, 1.01913993, 1.48227882, 0.63078896, 1.09995103,",
"       1.5334634 , 0.55479232, 1.0448664 , 1.50990566, 0.5665315 ,",,,,,,,
"       1.04607733, 1.45074987, 0.63940493, 1.03427426, 1.33440423,",,,,,,,
"       0.56015944, 0.89598958, 0.88707399]), 'std_fit_time': array([0.06443364, 0.02906627, 0.0586053 , 0.04107617, 0.07021658,",,,,,,,
"       0.02582114, 0.04917728, 0.03769511, 0.02243312, 0.04060241,",,,,,,,
"       0.03623684, 0.02935844, 0.0766234 , 0.05112913, 0.05305361,",,,,,,,
"       0.04518369, 0.04282321, 0.09473145]), 'mean_score_time': array([0.20799772, 0.26365964, 0.33410303, 0.15414397, 0.27422198,",,,,,,,
"       0.28904096, 0.14303207, 0.22617873, 0.29981502, 0.1770134 ,",,,,,,,
"       0.25230797, 0.26762295, 0.1362315 , 0.23940452, 0.15208626,",,,,,,,
"       0.13804181, 0.11730425, 0.10780549]), 'std_score_time': array([0.04153248, 0.01666566, 0.0095286 , 0.01810644, 0.01695366,",,,,,,,
"       0.06035596, 0.01021035, 0.00557739, 0.05716089, 0.04914926,",,,,,,,
"       0.02119805, 0.03935429, 0.0039603 , 0.00270431, 0.05150051,",,,,,,,
"       0.00351006, 0.00347856, 0.0011009 ]), 'param_max_depth': masked_array(data=[3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 10, 10, 10, 10, 10,",,,,,,,
"                   10],",,,,,,,
"             mask=[False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False],",,,,,,,
"       fill_value='?',",,,,,,,
"            dtype=object), 'param_min_impurity_decrease': masked_array(data=[0.2, 0.2, 0.2, 0.4, 0.4, 0.4, 0.2, 0.2, 0.2, 0.4, 0.4,",,,,,,,
"                   0.4, 0.2, 0.2, 0.2, 0.4, 0.4, 0.4],",,,,,,,
"             mask=[False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False],",,,,,,,
"       fill_value='?',",,,,,,,
"            dtype=object), 'param_n_estimators': masked_array(data=[50, 100, 150, 50, 100, 150, 50, 100, 150, 50, 100, 150,",,,,,,,
"                   50, 100, 150, 50, 100, 150],",,,,,,,
"             mask=[False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False],",,,,,,,
"       fill_value='?',",,,,,,,
"            dtype=object), 'param_n_jobs': masked_array(data=[-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,",,,,,,,
"                   -1, -1, -1, -1],",,,,,,,
"             mask=[False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False],",,,,,,,
"       fill_value='?',",,,,,,,
"            dtype=object), 'params': [{'max_depth': 3, 'min_impurity_decrease': 0.2, 'n_estimators': 50, 'n_jobs': -1}, {'max_depth': 3, 'min_impurity_decrease': 0.2, 'n_estimators': 100, 'n_jobs': -1}, {'max_depth': 3, 'min_impurity_decrease': 0.2, 'n_estimators': 150, 'n_jobs': -1}, {'max_depth': 3, 'min_impurity_decrease': 0.4, 'n_estimators': 50, 'n_jobs': -1}, {'max_depth': 3, 'min_impurity_decrease': 0.4, 'n_estimators': 100, 'n_jobs': -1}, {'max_depth': 3, 'min_impurity_decrease': 0.4, 'n_estimators': 150, 'n_jobs': -1}, {'max_depth': 5, 'min_impurity_decrease': 0.2, 'n_estimators': 50, 'n_jobs': -1}, {'max_depth': 5, 'min_impurity_decrease': 0.2, 'n_estimators': 100, 'n_jobs': -1}, {'max_depth': 5, 'min_impurity_decrease': 0.2, 'n_estimators': 150, 'n_jobs': -1}, {'max_depth': 5, 'min_impurity_decrease': 0.4, 'n_estimators': 50, 'n_jobs': -1}, {'max_depth': 5, 'min_impurity_decrease': 0.4, 'n_estimators': 100, 'n_jobs': -1}, {'max_depth': 5, 'min_impurity_decrease': 0.4, 'n_estimators': 150, 'n_jobs': -1}, {'max_depth': 10, 'min_impurity_decrease': 0.2, 'n_estimators': 50, 'n_jobs': -1}, {'max_depth': 10, 'min_impurity_decrease': 0.2, 'n_estimators': 100, 'n_jobs': -1}, {'max_depth': 10, 'min_impurity_decrease': 0.2, 'n_estimators': 150, 'n_jobs': -1}, {'max_depth': 10, 'min_impurity_decrease': 0.4, 'n_estimators': 50, 'n_jobs': -1}, {'max_depth': 10, 'min_impurity_decrease': 0.4, 'n_estimators': 100, 'n_jobs': -1}, {'max_depth': 10, 'min_impurity_decrease': 0.4, 'n_estimators': 150, 'n_jobs': -1}], 'split0_test_score': array([0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875,",,,,,,,
"       0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875,",,,,,,,
"       0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875]), 'split1_test_score': array([0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875,",,,,,,,
"       0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875,",,,,,,,
"       0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875]), 'split2_test_score': array([0.852625, 0.852625, 0.852625, 0.852625, 0.852625, 0.852625,",,,,,,,
"       0.852625, 0.852625, 0.852625, 0.852625, 0.852625, 0.852625,",,,,,,,
"       0.852625, 0.852625, 0.852625, 0.852625, 0.852625, 0.852625]), 'mean_test_score': array([0.85266667, 0.85266667, 0.85266667, 0.85266667, 0.85266667,",,,,,,,
"       0.85266667, 0.85266667, 0.85266667, 0.85266667, 0.85266667,",,,,,,,
"       0.85266667, 0.85266667, 0.85266667, 0.85266667, 0.85266667,",,,,,,,
"       0.85266667, 0.85266667, 0.85266667]), 'std_test_score': array([2.94627825e-05, 2.94627825e-05, 2.94627825e-05, 2.94627825e-05,",,,,,,,
"       2.94627825e-05, 2.94627825e-05, 2.94627825e-05, 2.94627825e-05,",,,,,,,
"       2.94627825e-05, 2.94627825e-05, 2.94627825e-05, 2.94627825e-05,",,,,,,,
"       2.94627825e-05, 2.94627825e-05, 2.94627825e-05, 2.94627825e-05,",,,,,,,
"       2.94627825e-05, 2.94627825e-05]), 'rank_test_score': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32)}","{'min_impurity_decrease': [0.2, 0.4], 'n_estimators': [50, 100, 150], 'max_depth': [3, 5, 10], 'n_jobs': [-1]}",,,,,,
15082020221305,RandomForestClassifier,0.0,"{'max_depth': 3, 'min_impurity_decrease': 0.2, 'n_estimators': 50, 'n_jobs': -1}",3.0,make_scorer(accuracy_score),"{'mean_fit_time': array([1.01326187, 2.07467747, 2.07438175, 0.87236532, 2.00606092,",
"       2.33217732, 0.8934962 , 1.73381678, 2.42123389, 1.24570338,",,,,,,,
"       1.37869604, 2.16796335, 0.79661004, 1.36843268, 1.9148345 ,",,,,,,,
"       0.79419963, 1.32929341, 1.41196807]), 'std_fit_time': array([0.16503197, 0.54420784, 0.12652136, 0.19017991, 0.03395216,",,,,,,,
"       0.19791982, 0.11449418, 0.16116325, 0.21579935, 0.19980774,",,,,,,,
"       0.03434897, 0.06476805, 0.06015714, 0.16399195, 0.02320456,",,,,,,,
"       0.07401468, 0.04918008, 0.09322195]), 'mean_score_time': array([0.42507903, 0.38388213, 0.39849091, 0.45166469, 0.55626774,",,,,,,,
"       0.33484395, 0.35033711, 0.33863743, 0.40444676, 0.28993805,",,,,,,,
"       0.36840645, 0.39627822, 0.28357871, 0.32617609, 0.26241366,",,,,,,,
"       0.17000747, 0.14754232, 0.10842697]), 'std_score_time': array([0.10988575, 0.05274906, 0.1034203 , 0.30098391, 0.13954958,",,,,,,,
"       0.1155211 , 0.2406761 , 0.09003549, 0.00588508, 0.08574177,",,,,,,,
"       0.05120341, 0.01747963, 0.0600647 , 0.01886993, 0.04219687,",,,,,,,
"       0.03900077, 0.05142852, 0.00097533]), 'param_max_depth': masked_array(data=[3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 10, 10, 10, 10, 10,",,,,,,,
"                   10],",,,,,,,
"             mask=[False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False],",,,,,,,
"       fill_value='?',",,,,,,,
"            dtype=object), 'param_min_impurity_decrease': masked_array(data=[0.2, 0.2, 0.2, 0.4, 0.4, 0.4, 0.2, 0.2, 0.2, 0.4, 0.4,",,,,,,,
"                   0.4, 0.2, 0.2, 0.2, 0.4, 0.4, 0.4],",,,,,,,
"             mask=[False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False],",,,,,,,
"       fill_value='?',",,,,,,,
"            dtype=object), 'param_n_estimators': masked_array(data=[50, 100, 150, 50, 100, 150, 50, 100, 150, 50, 100, 150,",,,,,,,
"                   50, 100, 150, 50, 100, 150],",,,,,,,
"             mask=[False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False],",,,,,,,
"       fill_value='?',",,,,,,,
"            dtype=object), 'param_n_jobs': masked_array(data=[-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,",,,,,,,
"                   -1, -1, -1, -1],",,,,,,,
"             mask=[False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False],",,,,,,,
"       fill_value='?',",,,,,,,
"            dtype=object), 'params': [{'max_depth': 3, 'min_impurity_decrease': 0.2, 'n_estimators': 50, 'n_jobs': -1}, {'max_depth': 3, 'min_impurity_decrease': 0.2, 'n_estimators': 100, 'n_jobs': -1}, {'max_depth': 3, 'min_impurity_decrease': 0.2, 'n_estimators': 150, 'n_jobs': -1}, {'max_depth': 3, 'min_impurity_decrease': 0.4, 'n_estimators': 50, 'n_jobs': -1}, {'max_depth': 3, 'min_impurity_decrease': 0.4, 'n_estimators': 100, 'n_jobs': -1}, {'max_depth': 3, 'min_impurity_decrease': 0.4, 'n_estimators': 150, 'n_jobs': -1}, {'max_depth': 5, 'min_impurity_decrease': 0.2, 'n_estimators': 50, 'n_jobs': -1}, {'max_depth': 5, 'min_impurity_decrease': 0.2, 'n_estimators': 100, 'n_jobs': -1}, {'max_depth': 5, 'min_impurity_decrease': 0.2, 'n_estimators': 150, 'n_jobs': -1}, {'max_depth': 5, 'min_impurity_decrease': 0.4, 'n_estimators': 50, 'n_jobs': -1}, {'max_depth': 5, 'min_impurity_decrease': 0.4, 'n_estimators': 100, 'n_jobs': -1}, {'max_depth': 5, 'min_impurity_decrease': 0.4, 'n_estimators': 150, 'n_jobs': -1}, {'max_depth': 10, 'min_impurity_decrease': 0.2, 'n_estimators': 50, 'n_jobs': -1}, {'max_depth': 10, 'min_impurity_decrease': 0.2, 'n_estimators': 100, 'n_jobs': -1}, {'max_depth': 10, 'min_impurity_decrease': 0.2, 'n_estimators': 150, 'n_jobs': -1}, {'max_depth': 10, 'min_impurity_decrease': 0.4, 'n_estimators': 50, 'n_jobs': -1}, {'max_depth': 10, 'min_impurity_decrease': 0.4, 'n_estimators': 100, 'n_jobs': -1}, {'max_depth': 10, 'min_impurity_decrease': 0.4, 'n_estimators': 150, 'n_jobs': -1}], 'split0_test_score': array([0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875,",,,,,,,
"       0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875,",,,,,,,
"       0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875]), 'split1_test_score': array([0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875,",,,,,,,
"       0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875,",,,,,,,
"       0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875]), 'split2_test_score': array([0.852625, 0.852625, 0.852625, 0.852625, 0.852625, 0.852625,",,,,,,,
"       0.852625, 0.852625, 0.852625, 0.852625, 0.852625, 0.852625,",,,,,,,
"       0.852625, 0.852625, 0.852625, 0.852625, 0.852625, 0.852625]), 'mean_test_score': array([0.85266667, 0.85266667, 0.85266667, 0.85266667, 0.85266667,",,,,,,,
"       0.85266667, 0.85266667, 0.85266667, 0.85266667, 0.85266667,",,,,,,,
"       0.85266667, 0.85266667, 0.85266667, 0.85266667, 0.85266667,",,,,,,,
"       0.85266667, 0.85266667, 0.85266667]), 'std_test_score': array([2.94627825e-05, 2.94627825e-05, 2.94627825e-05, 2.94627825e-05,",,,,,,,
"       2.94627825e-05, 2.94627825e-05, 2.94627825e-05, 2.94627825e-05,",,,,,,,
"       2.94627825e-05, 2.94627825e-05, 2.94627825e-05, 2.94627825e-05,",,,,,,,
"       2.94627825e-05, 2.94627825e-05, 2.94627825e-05, 2.94627825e-05,",,,,,,,
"       2.94627825e-05, 2.94627825e-05]), 'rank_test_score': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32)}","{'min_impurity_decrease': [0.2, 0.4], 'n_estimators': [50, 100, 150], 'max_depth': [3, 5, 10], 'n_jobs': [-1]}",,,,,,
15082020212803,RandomForestClassifier,0.0,"{'max_depth': 3, 'min_impurity_decrease': 0.2, 'n_estimators': 50, 'n_jobs': -1}",3.0,make_scorer(accuracy_score),"{'mean_fit_time': array([0.59893847, 1.12756848, 1.55824288, 0.61756961, 1.16963482,",
"       1.54907672, 0.63089697, 1.07450644, 1.48504186, 0.55740277,",,,,,,,
"       1.08204087, 1.46563808, 0.60977205, 1.03517413, 1.35886375,",,,,,,,
"       0.60996366, 0.97911946, 0.89410774]), 'std_fit_time': array([0.06235991, 0.04127025, 0.06398779, 0.01767688, 0.05228276,",,,,,,,
"       0.10417111, 0.01805261, 0.01500411, 0.03360926, 0.06208754,",,,,,,,
"       0.01663856, 0.02779942, 0.00425705, 0.015057  , 0.08949697,",,,,,,,
"       0.06078448, 0.01294184, 0.20985348]), 'mean_score_time': array([0.16111016, 0.2492315 , 0.29730797, 0.15044165, 0.24462907,",,,,,,,
"       0.34492866, 0.13331215, 0.26461681, 0.27590942, 0.14418745,",,,,,,,
"       0.2281003 , 0.30773497, 0.13081257, 0.26458963, 0.17903082,",,,,,,,
"       0.14642326, 0.11434364, 0.10738269]), 'std_score_time': array([0.02673544, 0.01179619, 0.06308117, 0.00631718, 0.0106845 ,",,,,,,,
"       0.05315426, 0.0153428 , 0.04163147, 0.04243849, 0.0069579 ,",,,,,,,
"       0.00548555, 0.05288832, 0.00691328, 0.00799113, 0.04801564,",,,,,,,
"       0.02182667, 0.00089808, 0.00028101]), 'param_max_depth': masked_array(data=[3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 10, 10, 10, 10, 10,",,,,,,,
"                   10],",,,,,,,
"             mask=[False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False],",,,,,,,
"       fill_value='?',",,,,,,,
"            dtype=object), 'param_min_impurity_decrease': masked_array(data=[0.2, 0.2, 0.2, 0.4, 0.4, 0.4, 0.2, 0.2, 0.2, 0.4, 0.4,",,,,,,,
"                   0.4, 0.2, 0.2, 0.2, 0.4, 0.4, 0.4],",,,,,,,
"             mask=[False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False],",,,,,,,
"       fill_value='?',",,,,,,,
"            dtype=object), 'param_n_estimators': masked_array(data=[50, 100, 150, 50, 100, 150, 50, 100, 150, 50, 100, 150,",,,,,,,
"                   50, 100, 150, 50, 100, 150],",,,,,,,
"             mask=[False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False],",,,,,,,
"       fill_value='?',",,,,,,,
"            dtype=object), 'param_n_jobs': masked_array(data=[-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,",,,,,,,
"                   -1, -1, -1, -1],",,,,,,,
"             mask=[False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False],",,,,,,,
"       fill_value='?',",,,,,,,
"            dtype=object), 'params': [{'max_depth': 3, 'min_impurity_decrease': 0.2, 'n_estimators': 50, 'n_jobs': -1}, {'max_depth': 3, 'min_impurity_decrease': 0.2, 'n_estimators': 100, 'n_jobs': -1}, {'max_depth': 3, 'min_impurity_decrease': 0.2, 'n_estimators': 150, 'n_jobs': -1}, {'max_depth': 3, 'min_impurity_decrease': 0.4, 'n_estimators': 50, 'n_jobs': -1}, {'max_depth': 3, 'min_impurity_decrease': 0.4, 'n_estimators': 100, 'n_jobs': -1}, {'max_depth': 3, 'min_impurity_decrease': 0.4, 'n_estimators': 150, 'n_jobs': -1}, {'max_depth': 5, 'min_impurity_decrease': 0.2, 'n_estimators': 50, 'n_jobs': -1}, {'max_depth': 5, 'min_impurity_decrease': 0.2, 'n_estimators': 100, 'n_jobs': -1}, {'max_depth': 5, 'min_impurity_decrease': 0.2, 'n_estimators': 150, 'n_jobs': -1}, {'max_depth': 5, 'min_impurity_decrease': 0.4, 'n_estimators': 50, 'n_jobs': -1}, {'max_depth': 5, 'min_impurity_decrease': 0.4, 'n_estimators': 100, 'n_jobs': -1}, {'max_depth': 5, 'min_impurity_decrease': 0.4, 'n_estimators': 150, 'n_jobs': -1}, {'max_depth': 10, 'min_impurity_decrease': 0.2, 'n_estimators': 50, 'n_jobs': -1}, {'max_depth': 10, 'min_impurity_decrease': 0.2, 'n_estimators': 100, 'n_jobs': -1}, {'max_depth': 10, 'min_impurity_decrease': 0.2, 'n_estimators': 150, 'n_jobs': -1}, {'max_depth': 10, 'min_impurity_decrease': 0.4, 'n_estimators': 50, 'n_jobs': -1}, {'max_depth': 10, 'min_impurity_decrease': 0.4, 'n_estimators': 100, 'n_jobs': -1}, {'max_depth': 10, 'min_impurity_decrease': 0.4, 'n_estimators': 150, 'n_jobs': -1}], 'split0_test_score': array([0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875,",,,,,,,
"       0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875,",,,,,,,
"       0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875]), 'split1_test_score': array([0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875,",,,,,,,
"       0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875,",,,,,,,
"       0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875]), 'split2_test_score': array([0.852625, 0.852625, 0.852625, 0.852625, 0.852625, 0.852625,",,,,,,,
"       0.852625, 0.852625, 0.852625, 0.852625, 0.852625, 0.852625,",,,,,,,
"       0.852625, 0.852625, 0.852625, 0.852625, 0.852625, 0.852625]), 'mean_test_score': array([0.85266667, 0.85266667, 0.85266667, 0.85266667, 0.85266667,",,,,,,,
"       0.85266667, 0.85266667, 0.85266667, 0.85266667, 0.85266667,",,,,,,,
"       0.85266667, 0.85266667, 0.85266667, 0.85266667, 0.85266667,",,,,,,,
"       0.85266667, 0.85266667, 0.85266667]), 'std_test_score': array([2.94627825e-05, 2.94627825e-05, 2.94627825e-05, 2.94627825e-05,",,,,,,,
"       2.94627825e-05, 2.94627825e-05, 2.94627825e-05, 2.94627825e-05,",,,,,,,
"       2.94627825e-05, 2.94627825e-05, 2.94627825e-05, 2.94627825e-05,",,,,,,,
"       2.94627825e-05, 2.94627825e-05, 2.94627825e-05, 2.94627825e-05,",,,,,,,
"       2.94627825e-05, 2.94627825e-05]), 'rank_test_score': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32)}","{'min_impurity_decrease': [0.2, 0.4], 'n_estimators': [50, 100, 150], 'max_depth': [3, 5, 10], 'n_jobs': [-1]}",,,,,,
15082020221649,RandomForestClassifier,0.0,"{'max_depth': 3, 'min_impurity_decrease': 0.2, 'n_estimators': 50, 'n_jobs': -1}",3.0,make_scorer(accuracy_score),"{'mean_fit_time': array([0.47927547, 1.19149852, 1.62528284, 0.60807236, 1.17972676,",
"       1.57984122, 0.5340325 , 1.02193681, 1.56178292, 0.57922276,",,,,,,,
"       1.09343195, 1.52344759, 0.65041916, 1.04839309, 1.33964562,",,,,,,,
"       0.59416612, 0.93519608, 0.87348779]), 'std_fit_time': array([0.01980308, 0.02841902, 0.06301059, 0.03560565, 0.00222009,",,,,,,,
"       0.07569839, 0.07794243, 0.03143057, 0.02929006, 0.06031598,",,,,,,,
"       0.0375691 , 0.01938371, 0.03668407, 0.03680307, 0.05732213,",,,,,,,
"       0.08535772, 0.0262054 , 0.07791185]), 'mean_score_time': array([0.15734688, 0.23127325, 0.35591229, 0.19062026, 0.23035081,",,,,,,,
"       0.28673196, 0.1552527 , 0.28139027, 0.3073531 , 0.12390931,",,,,,,,
"       0.23593458, 0.29621712, 0.11997279, 0.23999317, 0.18539373,",,,,,,,
"       0.14985005, 0.11877092, 0.10913515]), 'std_score_time': array([0.01414416, 0.0101912 , 0.02322549, 0.02703381, 0.00998516,",,,,,,,
"       0.06142113, 0.00952457, 0.02382671, 0.05708602, 0.00945084,",,,,,,,
"       0.020341  , 0.04404739, 0.00602778, 0.01225385, 0.04314424,",,,,,,,
"       0.01624357, 0.00519942, 0.00023055]), 'param_max_depth': masked_array(data=[3, 3, 3, 3, 3, 3, 5, 5, 5, 5, 5, 5, 10, 10, 10, 10, 10,",,,,,,,
"                   10],",,,,,,,
"             mask=[False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False],",,,,,,,
"       fill_value='?',",,,,,,,
"            dtype=object), 'param_min_impurity_decrease': masked_array(data=[0.2, 0.2, 0.2, 0.4, 0.4, 0.4, 0.2, 0.2, 0.2, 0.4, 0.4,",,,,,,,
"                   0.4, 0.2, 0.2, 0.2, 0.4, 0.4, 0.4],",,,,,,,
"             mask=[False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False],",,,,,,,
"       fill_value='?',",,,,,,,
"            dtype=object), 'param_n_estimators': masked_array(data=[50, 100, 150, 50, 100, 150, 50, 100, 150, 50, 100, 150,",,,,,,,
"                   50, 100, 150, 50, 100, 150],",,,,,,,
"             mask=[False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False],",,,,,,,
"       fill_value='?',",,,,,,,
"            dtype=object), 'param_n_jobs': masked_array(data=[-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,",,,,,,,
"                   -1, -1, -1, -1],",,,,,,,
"             mask=[False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False],",,,,,,,
"       fill_value='?',",,,,,,,
"            dtype=object), 'params': [{'max_depth': 3, 'min_impurity_decrease': 0.2, 'n_estimators': 50, 'n_jobs': -1}, {'max_depth': 3, 'min_impurity_decrease': 0.2, 'n_estimators': 100, 'n_jobs': -1}, {'max_depth': 3, 'min_impurity_decrease': 0.2, 'n_estimators': 150, 'n_jobs': -1}, {'max_depth': 3, 'min_impurity_decrease': 0.4, 'n_estimators': 50, 'n_jobs': -1}, {'max_depth': 3, 'min_impurity_decrease': 0.4, 'n_estimators': 100, 'n_jobs': -1}, {'max_depth': 3, 'min_impurity_decrease': 0.4, 'n_estimators': 150, 'n_jobs': -1}, {'max_depth': 5, 'min_impurity_decrease': 0.2, 'n_estimators': 50, 'n_jobs': -1}, {'max_depth': 5, 'min_impurity_decrease': 0.2, 'n_estimators': 100, 'n_jobs': -1}, {'max_depth': 5, 'min_impurity_decrease': 0.2, 'n_estimators': 150, 'n_jobs': -1}, {'max_depth': 5, 'min_impurity_decrease': 0.4, 'n_estimators': 50, 'n_jobs': -1}, {'max_depth': 5, 'min_impurity_decrease': 0.4, 'n_estimators': 100, 'n_jobs': -1}, {'max_depth': 5, 'min_impurity_decrease': 0.4, 'n_estimators': 150, 'n_jobs': -1}, {'max_depth': 10, 'min_impurity_decrease': 0.2, 'n_estimators': 50, 'n_jobs': -1}, {'max_depth': 10, 'min_impurity_decrease': 0.2, 'n_estimators': 100, 'n_jobs': -1}, {'max_depth': 10, 'min_impurity_decrease': 0.2, 'n_estimators': 150, 'n_jobs': -1}, {'max_depth': 10, 'min_impurity_decrease': 0.4, 'n_estimators': 50, 'n_jobs': -1}, {'max_depth': 10, 'min_impurity_decrease': 0.4, 'n_estimators': 100, 'n_jobs': -1}, {'max_depth': 10, 'min_impurity_decrease': 0.4, 'n_estimators': 150, 'n_jobs': -1}], 'split0_test_score': array([0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875,",,,,,,,
"       0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875,",,,,,,,
"       0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875]), 'split1_test_score': array([0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875,",,,,,,,
"       0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875,",,,,,,,
"       0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875, 0.8526875]), 'split2_test_score': array([0.852625, 0.852625, 0.852625, 0.852625, 0.852625, 0.852625,",,,,,,,
"       0.852625, 0.852625, 0.852625, 0.852625, 0.852625, 0.852625,",,,,,,,
"       0.852625, 0.852625, 0.852625, 0.852625, 0.852625, 0.852625]), 'mean_test_score': array([0.85266667, 0.85266667, 0.85266667, 0.85266667, 0.85266667,",,,,,,,
"       0.85266667, 0.85266667, 0.85266667, 0.85266667, 0.85266667,",,,,,,,
"       0.85266667, 0.85266667, 0.85266667, 0.85266667, 0.85266667,",,,,,,,
"       0.85266667, 0.85266667, 0.85266667]), 'std_test_score': array([2.94627825e-05, 2.94627825e-05, 2.94627825e-05, 2.94627825e-05,",,,,,,,
"       2.94627825e-05, 2.94627825e-05, 2.94627825e-05, 2.94627825e-05,",,,,,,,
"       2.94627825e-05, 2.94627825e-05, 2.94627825e-05, 2.94627825e-05,",,,,,,,
"       2.94627825e-05, 2.94627825e-05, 2.94627825e-05, 2.94627825e-05,",,,,,,,
"       2.94627825e-05, 2.94627825e-05]), 'rank_test_score': array([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1], dtype=int32)}","{'min_impurity_decrease': [0.2, 0.4], 'n_estimators': [50, 100, 150], 'max_depth': [3, 5, 10], 'n_jobs': [-1]}",,,,,,
15082020212743,LogisticRegression,0.0,"{'C': 1, 'class_weight': 'None', 'solver': 'lbfgs'}",3.0,make_scorer(accuracy_score),"{'mean_fit_time': array([0.56626177, 0.02447271, 0.63522116, 0.17995183, 0.57222772,",
"       0.02223285, 0.60628843, 0.16865977]), 'std_fit_time': array([0.0070511 , 0.00061727, 0.03672319, 0.00839931, 0.03959086,",,,,,,,
"       0.00261643, 0.01951644, 0.00856823]), 'mean_score_time': array([0.0056982 , 0.        , 0.00372156, 0.00605965, 0.00456818,",,,,,,,
"       0.        , 0.00367053, 0.00569034]), 'std_score_time': array([2.80278119e-04, 0.00000000e+00, 7.41402134e-05, 4.79182239e-04,",,,,,,,
"       8.80367640e-04, 0.00000000e+00, 4.58996876e-05, 1.08045960e-03]), 'param_C': masked_array(data=[0.1, 0.1, 0.1, 0.1, 1, 1, 1, 1],",,,,,,,
"             mask=[False, False, False, False, False, False, False, False],",,,,,,,
"       fill_value='?',",,,,,,,
"            dtype=object), 'param_class_weight': masked_array(data=['None', 'None', 'balanced', 'balanced', 'None', 'None',",,,,,,,
"                   'balanced', 'balanced'],",,,,,,,
"             mask=[False, False, False, False, False, False, False, False],",,,,,,,
"       fill_value='?',",,,,,,,
"            dtype=object), 'param_solver': masked_array(data=['lbfgs', 'liblinear', 'lbfgs', 'liblinear', 'lbfgs',",,,,,,,
"                   'liblinear', 'lbfgs', 'liblinear'],",,,,,,,
"             mask=[False, False, False, False, False, False, False, False],",,,,,,,
"       fill_value='?',",,,,,,,
"            dtype=object), 'params': [{'C': 0.1, 'class_weight': 'None', 'solver': 'lbfgs'}, {'C': 0.1, 'class_weight': 'None', 'solver': 'liblinear'}, {'C': 0.1, 'class_weight': 'balanced', 'solver': 'lbfgs'}, {'C': 0.1, 'class_weight': 'balanced', 'solver': 'liblinear'}, {'C': 1, 'class_weight': 'None', 'solver': 'lbfgs'}, {'C': 1, 'class_weight': 'None', 'solver': 'liblinear'}, {'C': 1, 'class_weight': 'balanced', 'solver': 'lbfgs'}, {'C': 1, 'class_weight': 'balanced', 'solver': 'liblinear'}], 'split0_test_score': array([0.8526875,       nan, 0.59425  , 0.6008125, 0.85275  ,       nan,",,,,,,,
"       0.5925   , 0.602    ]), 'split1_test_score': array([0.8526875,       nan, 0.5989375, 0.603375 , 0.8526875,       nan,",,,,,,,
"       0.60075  , 0.6044375]), 'split2_test_score': array([0.8525625,       nan, 0.598125 , 0.604875 , 0.8525625,       nan,",,,,,,,
"       0.59675  , 0.6056875]), 'mean_test_score': array([0.85264583,        nan, 0.59710417, 0.60302083, 0.85266667,",,,,,,,
"              nan, 0.59666667, 0.60404167]), 'std_test_score': array([5.89255651e-05,            nan, 2.04527742e-03, 1.67730977e-03,",,,,,,,
"       7.79511956e-05,            nan, 3.36856382e-03, 1.53121457e-03]), 'rank_test_score': array([2, 7, 5, 4, 1, 8, 6, 3], dtype=int32)}","{'C': [0.1, 1], 'solver': ['lbfgs', 'liblinear'], 'class_weight': ['None', 'balanced']}",,,,,,
15082020221311,GradientBoostingClassifier,0.0,"{'learning_rate': 0.1, 'max_depth': 3, 'n_estimators': 50}",3.0,make_scorer(accuracy_score),"{'mean_fit_time': array([ 1.83633542,  3.65250063,  5.52961628,  2.76984604,  5.78353031,",
"        8.78645865,  6.16100852, 13.07669274, 20.87507621,  1.86310824,",,,,,,,
"        3.96987168,  5.81160482,  3.31032999,  6.34030398, 10.77239005,",,,,,,,
"        7.69495463, 14.02719847, 17.7028869 ]), 'std_fit_time': array([0.01866936, 0.06902958, 0.09222042, 0.00482572, 0.08941218,",,,,,,,
"       0.19571597, 0.08712465, 0.43380236, 0.4331806 , 0.03921658,",,,,,,,
"       0.25069428, 0.33526623, 0.24189365, 0.32779508, 0.70664306,",,,,,,,
"       0.76795633, 0.16182688, 0.13656753]), 'mean_score_time': array([0.02717717, 0.04179033, 0.0541993 , 0.03608712, 0.05746349,",,,,,,,
"       0.08944718, 0.06579073, 0.09319146, 0.13055038, 0.0217696 ,",,,,,,,
"       0.03178032, 0.04459667, 0.02542138, 0.0441823 , 0.06305019,",,,,,,,
"       0.05652316, 0.07207743, 0.09498461]), 'std_score_time': array([0.00027718, 0.00069221, 0.00044577, 0.00071259, 0.00480869,",,,,,,,
"       0.02052009, 0.01102761, 0.00119379, 0.01088901, 0.00257372,",,,,,,,
"       0.00073351, 0.00077817, 0.00023909, 0.00047856, 0.00108398,",,,,,,,
"       0.00162301, 0.00826605, 0.00048947]), 'param_learning_rate': masked_array(data=[0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 1, 1, 1,",,,,,,,
"                   1, 1, 1, 1, 1, 1],",,,,,,,
"             mask=[False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False],",,,,,,,
"       fill_value='?',",,,,,,,
"            dtype=object), 'param_max_depth': masked_array(data=[3, 3, 3, 5, 5, 5, 10, 10, 10, 3, 3, 3, 5, 5, 5, 10, 10,",,,,,,,
"                   10],",,,,,,,
"             mask=[False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False],",,,,,,,
"       fill_value='?',",,,,,,,
"            dtype=object), 'param_n_estimators': masked_array(data=[50, 100, 150, 50, 100, 150, 50, 100, 150, 50, 100, 150,",,,,,,,
"                   50, 100, 150, 50, 100, 150],",,,,,,,
"             mask=[False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False],",,,,,,,
"       fill_value='?',",,,,,,,
"            dtype=object), 'params': [{'learning_rate': 0.1, 'max_depth': 3, 'n_estimators': 50}, {'learning_rate': 0.1, 'max_depth': 3, 'n_estimators': 100}, {'learning_rate': 0.1, 'max_depth': 3, 'n_estimators': 150}, {'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 50}, {'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 100}, {'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 150}, {'learning_rate': 0.1, 'max_depth': 10, 'n_estimators': 50}, {'learning_rate': 0.1, 'max_depth': 10, 'n_estimators': 100}, {'learning_rate': 0.1, 'max_depth': 10, 'n_estimators': 150}, {'learning_rate': 1, 'max_depth': 3, 'n_estimators': 50}, {'learning_rate': 1, 'max_depth': 3, 'n_estimators': 100}, {'learning_rate': 1, 'max_depth': 3, 'n_estimators': 150}, {'learning_rate': 1, 'max_depth': 5, 'n_estimators': 50}, {'learning_rate': 1, 'max_depth': 5, 'n_estimators': 100}, {'learning_rate': 1, 'max_depth': 5, 'n_estimators': 150}, {'learning_rate': 1, 'max_depth': 10, 'n_estimators': 50}, {'learning_rate': 1, 'max_depth': 10, 'n_estimators': 100}, {'learning_rate': 1, 'max_depth': 10, 'n_estimators': 150}], 'split0_test_score': array([0.8526875, 0.8525625, 0.8526875, 0.8525   , 0.8521875, 0.8515625,",,,,,,,
"       0.8465625, 0.8431875, 0.841875 , 0.8471875, 0.8430625, 0.8384375,",,,,,,,
"       0.833    , 0.818375 , 0.810875 , 0.7815625, 0.7828125, 0.786375 ]), 'split1_test_score': array([0.852625 , 0.8524375, 0.852125 , 0.8524375, 0.8516875, 0.8506875,",,,,,,,
"       0.847    , 0.844875 , 0.84275  , 0.846    , 0.840625 , 0.8355625,",,,,,,,
"       0.8359375, 0.8223125, 0.8088125, 0.7810625, 0.787375 , 0.7913125]), 'split2_test_score': array([0.8525625, 0.8524375, 0.8524375, 0.8520625, 0.8516875, 0.8509375,",,,,,,,
"       0.8469375, 0.844    , 0.8434375, 0.846625 , 0.84225  , 0.8380625,",,,,,,,
"       0.83125  , 0.815375 , 0.8089375, 0.7869375, 0.7875625, 0.796    ]), 'mean_test_score': array([0.852625  , 0.85247917, 0.85241667, 0.85233333, 0.85185417,",,,,,,,
"       0.8510625 , 0.84683333, 0.84402083, 0.8426875 , 0.84660417,",,,,,,,
"       0.84197917, 0.83735417, 0.83339583, 0.8186875 , 0.80954167,",,,,,,,
"       0.7831875 , 0.78591667, 0.79122917]), 'std_test_score': array([5.10310363e-05, 5.89255651e-05, 2.30111688e-04, 1.93200385e-04,",,,,,,,
"       2.35702260e-04, 3.67990036e-04, 1.93200385e-04, 6.89076475e-04,",,,,,,,
"       6.39417052e-04, 4.85018614e-04, 1.01336554e-03, 1.27611607e-03,",,,,,,,
"       1.93402466e-03, 2.84082954e-03, 9.44189099e-04, 2.65949557e-03,",,,,,,,
"       2.19631162e-03, 3.92983160e-03]), 'rank_test_score': array([ 1,  2,  3,  4,  5,  6,  7,  9, 10,  8, 11, 12, 13, 14, 15, 18, 17,",,,,,,,
"       16], dtype=int32)}","{'learning_rate': [0.1, 1], 'n_estimators': [50, 100, 150], 'max_depth': [3, 5, 10]}",,,,,,
15082020212917,GradientBoostingClassifier,0.0,"{'learning_rate': 0.1, 'max_depth': 3, 'n_estimators': 50}",3.0,make_scorer(accuracy_score),"{'mean_fit_time': array([ 1.81289872,  3.65817642,  5.43103504,  2.84333213,  5.64895233,",
"        8.5684464 ,  6.15623148, 12.29202882, 17.31905286,  1.82089702,",,,,,,,
"        3.665284  ,  5.45138256,  2.9469742 ,  5.70141872,  8.29605134,",,,,,,,
"        5.98526891,  9.14213729, 13.06473986]), 'std_fit_time': array([0.00584484, 0.04750329, 0.008241  , 0.06274759, 0.12887093,",,,,,,,
"       0.18478465, 0.03121551, 0.09237289, 0.31366302, 0.02111062,",,,,,,,
"       0.0635617 , 0.07665818, 0.06686983, 0.04421686, 0.18419843,",,,,,,,
"       0.04842029, 0.23598843, 0.33676562]), 'mean_score_time': array([0.02719474, 0.04209439, 0.05433933, 0.03519122, 0.05470777,",,,,,,,
"       0.07153686, 0.05894113, 0.09292936, 0.09767723, 0.02012682,",,,,,,,
"       0.03205053, 0.04283746, 0.02562602, 0.04372215, 0.0500079 ,",,,,,,,
"       0.04541238, 0.06658538, 0.09668406]), 'std_score_time': array([4.67443566e-04, 8.60138157e-04, 5.99662630e-04, 3.14455296e-04,",,,,,,,
"       5.15433655e-04, 1.52106984e-05, 1.24040730e-03, 2.90941467e-04,",,,,,,,
"       6.54600805e-04, 1.58350625e-04, 8.09974442e-04, 8.16265398e-04,",,,,,,,
"       1.65120698e-04, 4.79988296e-04, 7.32170689e-03, 8.37969468e-04,",,,,,,,
"       2.02762195e-03, 5.41621611e-03]), 'param_learning_rate': masked_array(data=[0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 1, 1, 1,",,,,,,,
"                   1, 1, 1, 1, 1, 1],",,,,,,,
"             mask=[False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False],",,,,,,,
"       fill_value='?',",,,,,,,
"            dtype=object), 'param_max_depth': masked_array(data=[3, 3, 3, 5, 5, 5, 10, 10, 10, 3, 3, 3, 5, 5, 5, 10, 10,",,,,,,,
"                   10],",,,,,,,
"             mask=[False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False],",,,,,,,
"       fill_value='?',",,,,,,,
"            dtype=object), 'param_n_estimators': masked_array(data=[50, 100, 150, 50, 100, 150, 50, 100, 150, 50, 100, 150,",,,,,,,
"                   50, 100, 150, 50, 100, 150],",,,,,,,
"             mask=[False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False, False, False, False, False, False, False,",,,,,,,
"                   False, False],",,,,,,,
"       fill_value='?',",,,,,,,
"            dtype=object), 'params': [{'learning_rate': 0.1, 'max_depth': 3, 'n_estimators': 50}, {'learning_rate': 0.1, 'max_depth': 3, 'n_estimators': 100}, {'learning_rate': 0.1, 'max_depth': 3, 'n_estimators': 150}, {'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 50}, {'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 100}, {'learning_rate': 0.1, 'max_depth': 5, 'n_estimators': 150}, {'learning_rate': 0.1, 'max_depth': 10, 'n_estimators': 50}, {'learning_rate': 0.1, 'max_depth': 10, 'n_estimators': 100}, {'learning_rate': 0.1, 'max_depth': 10, 'n_estimators': 150}, {'learning_rate': 1, 'max_depth': 3, 'n_estimators': 50}, {'learning_rate': 1, 'max_depth': 3, 'n_estimators': 100}, {'learning_rate': 1, 'max_depth': 3, 'n_estimators': 150}, {'learning_rate': 1, 'max_depth': 5, 'n_estimators': 50}, {'learning_rate': 1, 'max_depth': 5, 'n_estimators': 100}, {'learning_rate': 1, 'max_depth': 5, 'n_estimators': 150}, {'learning_rate': 1, 'max_depth': 10, 'n_estimators': 50}, {'learning_rate': 1, 'max_depth': 10, 'n_estimators': 100}, {'learning_rate': 1, 'max_depth': 10, 'n_estimators': 150}], 'split0_test_score': array([0.8526875, 0.8525625, 0.8526875, 0.8525   , 0.8521875, 0.851625 ,",,,,,,,
"       0.8458125, 0.8431875, 0.84175  , 0.8471875, 0.8430625, 0.8385625,",,,,,,,
"       0.833125 , 0.8185625, 0.8106875, 0.785375 , 0.78775  , 0.7883125]), 'split1_test_score': array([0.852625 , 0.852375 , 0.852125 , 0.85225  , 0.851625 , 0.8509375,",,,,,,,
"       0.8475625, 0.8445625, 0.842375 , 0.846    , 0.840625 , 0.8355   ,",,,,,,,
"       0.835625 , 0.8226875, 0.80875  , 0.7840625, 0.7881875, 0.7873125]), 'split2_test_score': array([0.8525625, 0.8524375, 0.8524375, 0.852125 , 0.851625 , 0.8509375,",,,,,,,
"       0.8469375, 0.8444375, 0.841875 , 0.8465   , 0.84225  , 0.8381875,",,,,,,,
"       0.8313125, 0.8155   , 0.809375 , 0.78375  , 0.7883125, 0.791125 ]), 'mean_test_score': array([0.852625  , 0.85245833, 0.85241667, 0.85229167, 0.8518125 ,",,,,,,,
"       0.85116667, 0.84677083, 0.8440625 , 0.842     , 0.8465625 ,",,,,,,,
"       0.84197917, 0.83741667, 0.83335417, 0.81891667, 0.80960417,",,,,,,,
"       0.78439583, 0.78808333, 0.78891667]), 'std_test_score': array([5.10310363e-05, 7.79511956e-05, 2.30111688e-04, 1.55902391e-04,",,,,,,,
"       2.65165043e-04, 3.24090608e-04, 7.24089467e-04, 6.20819351e-04,",,,,,,,
"       2.70030862e-04, 4.86805060e-04, 1.01336554e-03, 1.36390728e-03,",,,,,,,
"       1.76801246e-03, 2.94495213e-03, 8.07409266e-04, 7.04031052e-04,",,,,,,,
"       2.41163269e-04, 1.61401200e-03]), 'rank_test_score': array([ 1,  2,  3,  4,  5,  6,  7,  9, 10,  8, 11, 12, 13, 14, 15, 18, 17,",,,,,,,
"       16], dtype=int32)}","{'learning_rate': [0.1, 1], 'n_estimators': [50, 100, 150], 'max_depth': [3, 5, 10]}",,,,,,
